[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wfrmls"
version = "1.3.0"
description = "Python wrapper for Wasatch Front Regional MLS API"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "WFRMLS API Team", email = "api@utahrealestate.com"}
]
keywords = ["wfrmls", "mls", "real-estate", "api", "wrapper", "reso", "utah"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "python-dotenv>=0.19.0"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["wfrmls*"]
exclude = ["tests*", "api_docs*", "docs*", "tasks*"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "responses>=0.23.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pylint>=2.17.0",
    "types-requests>=2.25.0"
]

[project.urls]
Homepage = "https://github.com/theperrygroup/wfrmls"
Documentation = "https://theperrygroup.github.io/wfrmls/"
Repository = "https://github.com/theperrygroup/wfrmls"
Issues = "https://github.com/theperrygroup/wfrmls/issues"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_equality = true

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --cov=wfrmls --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests that hit live APIs",
    "unit: marks tests as unit tests (mocked/isolated)",
] 